AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for Java optimization on AWS Lambda Workshop

Globals:
  Function:
    Timeout: 30
    Runtime: java17
    MemorySize: 256
    # SnapStart:
      # ApplyOn: PublishedVersions
    Environment:
      Variables:
        TABLE_NAME: !Ref DynamoDBTableName
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    Architectures:
      - x86_64
  Api:
    TracingEnabled: True

Parameters:
  DynamoDBTableName:
    Type: String
    Description: Name of the DynamoDB table to be created by this template
    Default: WorkshopUsers

Resources:
  LambdaLoggingPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows basic logging actions for Lambda functions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'

  DynamoDbBasicPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: Allows basic DynamoDB actions for Lambda functions
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:Scan
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
            Resource: !GetAtt DynamoDbTable.Arn

  SpringbootServerlessJavaContainer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .workshop-packages/demo-springboot-app-lambda-serverless-java-container-1.0.0-aws.jar
      FunctionName: workshop-springboot-serverless-java-container
      Handler: com.atn.digital.user.adapters.in.handler.StreamLambdaHandler::handleRequest
      # Handler: com.atn.digital.user.adapters.in.handler.StreamLambdaHandlerWithPriming::handleRequest
      # MemorySize: 2560
      AutoPublishAlias: workshop
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /serverless-java-container/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /serverless-java-container/users
            Method: POST
      Policies:
        - !Ref LambdaLoggingPolicy
        - !Ref DynamoDbBasicPolicy

  SpringbootLambdaFunctionHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .workshop-packages/demo-springboot-app-lambda-function-handler-1.0.0-aws.jar
      FunctionName: workshop-springboot-lambda-function-handler
      Handler: org.springframework.cloud.function.adapter.aws.FunctionInvoker::handleRequest
      # MemorySize: 2048
      AutoPublishAlias: workshop
      Environment:
        Variables:
          SPRING_CLOUD_FUNCTION_DEFINITION: userRequestHandler
          # SPRING_CLOUD_FUNCTION_DEFINITION: userRequestHandlerWithPriming
          MAIN_CLASS: com.atn.digital.user.UserApplication
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /springboot-function-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /springboot-function-handler/users
            Method: POST
      Policies:
        - !Ref LambdaLoggingPolicy
        - !Ref DynamoDbBasicPolicy

  MicronautLambdaRequestHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .workshop-packages/demo-micronaut-app-lambda-request-handler-1.0.0-aws.jar
      FunctionName: workshop-micronaut-lambda-request-handler
      Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandler::handleRequest
      # Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandlerWithPriming::handleRequest
      # MemorySize: 2048
      AutoPublishAlias: workshop
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /micronaut-request-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /micronaut-request-handler/users
            Method: POST
      Policies:
        - !Ref LambdaLoggingPolicy
        - !Ref DynamoDbBasicPolicy

  PlainJavaLambdaRequestHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .workshop-packages/demo-plain-java-app-lambda-handler-1.0.0-aws.jar
      FunctionName: workshop-plain-java-lambda-request-handler
      Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandler::handleRequest
      # Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandlerWithPriming::handleRequest
      # MemorySize: 2560
      AutoPublishAlias: workshop
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /plain-java-request-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /plain-java-request-handler/users
            Method: POST
      Policies:
        - !Ref LambdaLoggingPolicy
        - !Ref DynamoDbBasicPolicy

  DynamoDbTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref DynamoDBTableName
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  WorkshopApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Product Api function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"

  SpringbootServerlessJavaContainer:
    Description: "SpringbootServerlessJavaContainer ARN"
    Value: !GetAtt SpringbootServerlessJavaContainer.Arn

  SpringbootLambdaFunctionHandler:
    Description: "SpringbootLambdaFunctionHandler ARN"
    Value: !GetAtt SpringbootLambdaFunctionHandler.Arn

  MicronautLambdaRequestHandler:
    Description: "MicronautLambdaRequestHandler ARN"
    Value: !GetAtt MicronautLambdaRequestHandler.Arn

  PlainJavaLambdaRequestHandler:
    Description: "PlainJavaLambdaRequestHandler ARN"
    Value: !GetAtt PlainJavaLambdaRequestHandler.Arn
