AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Sample SAM Template for Java optimization on AWS Lambda Workshop

Globals:
  Function:
    Timeout: 30
    Runtime: java17
    MemorySize: 512
    AutoPublishAlias: workshop
    Environment:
      Variables:
        TABLE_NAME: !Ref DynamoDBTableName
        # JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
    Architectures:
      - x86_64
    Policies:
      - Statement:
          - Sid: AWSLambdaBasicLogsActions
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: '*'
      - Statement:
          - Sid: DynamoBasic
            Effect: Allow
            Action:
              - dynamodb:Scan
              - dynamodb:PutItem
              - dynamodb:DeleteItem
              - dynamodb:GetItem
            Resource: !GetAtt DynamoDbTable.Arn
  Api:
    TracingEnabled: True

Parameters:
  DynamoDBTableName:
    Type: String
    Description: Name of the DynamoDB table to be created by this template
    Default: Users

Resources:
  SpringbootServerlessJavaContainer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: demo-springboot-app-lambda-serverless-java-container/target/demo-springboot-app-lambda-serverless-java-container-1.0.0.jar
      FunctionName: workshop-springboot-serverless-java-container
      Handler: com.atn.digital.user.StreamLambdaHandler::handleRequest
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /serverless-java-container/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /serverless-java-container/users
            Method: POST

  SpringbootLambdaFunctionHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: demo-springboot-app-lambda-function-handler/target/demo-springboot-app-lambda-function-handler-1.0.0.jar
      FunctionName: workshop-springboot-lambda-function-handler
      Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandler::apply
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /springboot-function-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /springboot-function-handler/users
            Method: POST

  MicronautLambdaRequestHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: demo-micronaut-app-lambda-request-handler/target/demo-micronaut-app-lambda-request-handler-1.0.0.jar
      FunctionName: workshop-micronaut-lambda-request-handler
      Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandler::execute
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /micronaut-request-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /micronaut-request-handler/users
            Method: POST

  PlainJavaLambdaRequestHandler:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: demo-plain-java-app-lambda-request-handler/target/demo-plain-java-app-lambda-request-handler-1.0.0.jar
      FunctionName: workshop-plain-java-lambda-request-handler
      Handler: com.atn.digital.user.adapters.in.handler.UserRequestHandler::handleRequest
      Events:
        GetOne:
          Type: Api
          Properties:
            Path: /plain-java-request-handler/users/{id}
            Method: GET
        Create:
          Type: Api
          Properties:
            Path: /plain-java-request-handler/users
            Method: POST

  DynamoDbTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Ref DynamoDBTableName
      PrimaryKey:
        Name: id
        Type: String

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WorkshopApiUrl:
    Description: "API Gateway endpoint URL for Prod stage for Product Api function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"

  SpringbootServerlessJavaContainer:
    Description: "SpringbootServerlessJavaContainer ARN"
    Value: !GetAtt SpringbootServerlessJavaContainer.Arn

  SpringbootLambdaFunctionHandler:
    Description: "SpringbootLambdaFunctionHandler ARN"
    Value: !GetAtt SpringbootLambdaFunctionHandler.Arn

  MicronautLambdaRequestHandler:
    Description: "MicronautLambdaRequestHandler ARN"
    Value: !GetAtt MicronautLambdaRequestHandler.Arn

  PlainJavaLambdaRequestHandler:
    Description: "PlainJavaLambdaRequestHandler ARN"
    Value: !GetAtt PlainJavaLambdaRequestHandler.Arn
